// Generated by Selenium IDE
package pt.ua.tqs;


import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;

import io.github.bonigarcia.seljup.SeleniumJupiter;

import static org.hamcrest.Matchers.is;
import static org.hamcrest.MatcherAssert.assertThat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@ExtendWith(SeleniumJupiter.class)
public class FlightsTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @BeforeEach
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  
  @AfterEach
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void flights() {
    // Test name: flights
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://blazedemo.com/");
    // 2 | setWindowSize | 1596x791 | 
    driver.manage().window().setSize(new Dimension(1596, 791));
    // 3 | click | name=fromPort | 
    driver.findElement(By.name("fromPort")).click();
    // 4 | select | name=fromPort | label=Portland
    {
      WebElement dropdown = driver.findElement(By.name("fromPort"));
      dropdown.findElement(By.xpath("//option[. = 'Portland']")).click();
    }
    // 5 | click | css=.form-inline:nth-child(1) > option:nth-child(4) | 
    driver.findElement(By.cssSelector(".form-inline:nth-child(1) > option:nth-child(4)")).click();
    // 6 | click | name=toPort | 
    driver.findElement(By.name("toPort")).click();
    // 7 | select | name=toPort | label=London
    {
      WebElement dropdown = driver.findElement(By.name("toPort"));
      dropdown.findElement(By.xpath("//option[. = 'London']")).click();
    }
    // 8 | click | css=.form-inline:nth-child(4) > option:nth-child(3) | 
    driver.findElement(By.cssSelector(".form-inline:nth-child(4) > option:nth-child(3)")).click();
    // 9 | click | css=.btn-primary | 
    driver.findElement(By.cssSelector(".btn-primary")).click();
    // 10 | click | css=h3 | 
    driver.findElement(By.cssSelector("h3")).click();
    // 11 | click | css=h3 | 
    driver.findElement(By.cssSelector("h3")).click();
    // 12 | doubleClick | css=h3 | 
    {
      WebElement element = driver.findElement(By.cssSelector("h3"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 13 | assertElementPresent | css=h3 | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector("h3"));


      // The Assert I added

      assertThat(elements.get(0).getText(),is("Flights from Portland to London:"));



      assert(elements.size() > 0);
    }
    // 14 | click | css=h3 | 
    driver.findElement(By.cssSelector("h3")).click();
    // 15 | click | css=h3 | 
    driver.findElement(By.cssSelector("h3")).click();
    // 16 | doubleClick | css=h3 | 
    {
      WebElement element = driver.findElement(By.cssSelector("h3"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 17 | assertElementPresent | css=h3 | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector("h3"));
      assert(elements.size() > 0);
    }
    // 18 | click | css=tr:nth-child(3) .btn | 
    driver.findElement(By.cssSelector("tr:nth-child(3) .btn")).click();
    // 19 | click | id=inputName | 
    driver.findElement(By.id("inputName")).click();
    // 20 | type | id=inputName | rafael
    driver.findElement(By.id("inputName")).sendKeys("rafael");
    // 21 | click | id=address | 
    driver.findElement(By.id("address")).click();
    // 22 | type | id=address | 123 aveiro
    driver.findElement(By.id("address")).sendKeys("123 aveiro");
    // 23 | click | id=city | 
    driver.findElement(By.id("city")).click();
    // 24 | type | id=city | aveiro
    driver.findElement(By.id("city")).sendKeys("aveiro");
    // 25 | click | id=state | 
    driver.findElement(By.id("state")).click();
    // 26 | type | id=state | aveiro
    driver.findElement(By.id("state")).sendKeys("aveiro");
    // 27 | click | id=zipCode | 
    driver.findElement(By.id("zipCode")).click();
    // 28 | type | id=zipCode | 12345
    driver.findElement(By.id("zipCode")).sendKeys("12345");
    // 29 | click | id=cardType | 
    driver.findElement(By.id("cardType")).click();
    // 30 | select | id=cardType | label=American Express
    {
      WebElement dropdown = driver.findElement(By.id("cardType"));
      dropdown.findElement(By.xpath("//option[. = 'American Express']")).click();
    }
    // 31 | click | css=option:nth-child(2) | 
    driver.findElement(By.cssSelector("option:nth-child(2)")).click();
    // 32 | click | id=creditCardNumber | 
    driver.findElement(By.id("creditCardNumber")).click();
    // 33 | type | id=creditCardNumber | 12345678
    driver.findElement(By.id("creditCardNumber")).sendKeys("12345678");
    // 34 | click | id=creditCardMonth | 
    driver.findElement(By.id("creditCardMonth")).click();
    // 35 | type | id=creditCardMonth | 12
    driver.findElement(By.id("creditCardMonth")).sendKeys("12");
    // 36 | click | id=creditCardYear | 
    driver.findElement(By.id("creditCardYear")).click();
    // 37 | type | id=creditCardYear | 2023
    driver.findElement(By.id("creditCardYear")).sendKeys("2023");
    // 38 | click | id=nameOnCard | 
    driver.findElement(By.id("nameOnCard")).click();
    // 39 | type | id=nameOnCard | rafael
    driver.findElement(By.id("nameOnCard")).sendKeys("rafael");
    // 40 | click | css=.checkbox | 
    driver.findElement(By.cssSelector(".checkbox")).click();
    // 41 | click | css=.btn-primary | 
    driver.findElement(By.cssSelector(".btn-primary")).click();
    // 42 | assertTitle | BlazeDemo Confirmation | 
    assertThat(driver.getTitle(), is("BlazeDemo Confirmation"));
    // 43 | click | css=pre | 
    driver.findElement(By.cssSelector("pre")).click();
  }
}
